Creación de la cabecera de la entrada del archivo: En el código, se crea una cabecera de 512 bytes para cada archivo que se incluirá en el archivo .tar. Esta cabecera contiene información sobre el archivo, como su nombre, tamaño y otros metadatos. Los campos de la cabecera son:

Nombre del archivo (0-99): Se copia el nombre del archivo en el rango de bytes del 0 al 99. La copia se realiza utilizando la codificación ASCII.
Tipo y permisos (100-107): El tipo se establece en 0 para archivos regulares (representados como "00"). Los permisos se omiten en este ejemplo, pero normalmente se especifican aquí.
Propietario y grupo (108-147): Estos campos también se omiten en este ejemplo, pero se llenan con valores adecuados en una implementación más completa.
Tamaño del archivo (124-135): El tamaño del archivo se convierte en octal y se almacena en este campo. El tamaño en octal tiene un ancho fijo de 11 caracteres. Si el tamaño real es menor que esto, se llenan con ceros a la izquierda.
Fecha y hora de modificación (136-147): Estos campos también se omiten en este ejemplo.
Suma de comprobación (148-155): Este campo se inicializa en cero y se calcula posteriormente como la suma de todos los bytes en la cabecera.
Tipo de enlace (156-157): Se establece en 0x8000 para archivos regulares (representados en octal como "000"). Para otros tipos de archivos, se deben establecer diferentes valores.
Nombre del enlace (158-257): Estos campos también se omiten en este ejemplo, pero se llenarían con valores apropiados para enlaces simbólicos.
Cálculo de la suma de comprobación (checksum): Después de escribir la cabecera, se calcula la suma de comprobación. Se recorren los bytes de la cabecera y se suman para calcular el valor de la suma de comprobación. Este valor se convierte en octal y se almacena en el campo de suma de comprobación en la cabecera.

Escritura del contenido del archivo: A continuación, se escribe el contenido real del archivo en el archivo .tar. Esto se hace leyendo el contenido del archivo original y escribiéndolo en el archivo .tar.

Padding (relleno): Después de escribir el contenido, se agrega un relleno de ceros para garantizar que la entrada tenga un tamaño múltiplo de 512 bytes. Esto es necesario para cumplir con el formato .tar.